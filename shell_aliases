# ===============================================================
# Function definitions {{{
# ===============================================================

## Obselete in zsh ##
# function open_func() {
#   old_IFS=$IFS
#   IFS='
#   '
#   echo hello there
#   for k in "$@"; do
#     ("$open_cmd" "$k" &>/dev/null &)
#   done
#   IFS=$old_IFS
# }
# # unset open_cmd

function seas_func() {
  serverBase='fischer@lnxsrv0'
  local serverName
  if [[ -z "$1" ]]; then
    serverName='fischer@ugrad.seas.ucla.edu'
  else
    serverName="${serverBase}${1}".seas.ucla.edu
  fi
  ssh -X "${serverName}"
}

function play_album() {
  # This will play an album using vlc media player if it is installed
  type vlc &>/dev/null
  if [[ $? != 0 ]]; then
    echo "VLC media player must be installed" >&2
    return 1
  fi
  (vlc "$@" &>/dev/null &)
}

# function wifi() {
#   # Give control over the wifi radio
#   arg=""
#   case $1 in
#     restart)
#       ;&
#     fix)
#       ;&
#     -r)
#       arg="restart"
#       ;;
#     start)
#       arg="start"
#       ;;
#     stop)
#       arg="stop"
#       ;;
#   esac
#   if [ ! -z "${arg}" ]; then
#     sudo service network-manager "${arg}"
#   fi
# }

function lst() {
  if [ -z "$1" ]; then
    ext="txt"
  else
    ext="$1"
  fi
  echo 'ls *.'"$ext"
  ls *.$ext
}

function vimgrep() {
  local args
  if [ -z "$2" ]; then
    args=("+vimgrep '$1'" '*')
  else
    args=("+vimgrep '$1'" "${@:2}")
  fi
  echo "vim" "${args}"
  vim "${args}"
}

# }}}
# ===============================================================
# Linux specific {{{
# ===============================================================

if [[ "$(uname -s)" == "Linux" ]]; then
  # open_cmd='xdg-open'
  type chromium-browser &>/dev/null
  if [[ $? == 0 ]]; then
    alias browse='( chromium-browser &>/dev/null & )'
    alias bro=browse
  fi

  # Copy/pasting
  type xsel &>/dev/null
  if [[ $? == 0 ]]; then
    # We can copy/paste with commands
    alias pbcopy='xsel --clipboard --input'
    alias pbpaste='xsel --clipboard --output'
  fi

  # Shutdown/reboot (safely)
  alias turnoff='sudo shutdown -h now'
  alias steward='sudo shutdown -h now'
  alias fix_wifi='sudo service network-manager restart'

  # Allow enabling the touchscreen
  alias touchscreen_on="xinput set-prop 'ELAN Touchscreen' 'Device Enabled' 1"
  alias touchscreen_off="xinput set-prop 'ELAN Touchscreen' 'Device Enabled' 0"
fi

type tmux &>/dev/null
if [[ $? == 0 ]]; then
  # Tmux specific aliases
  tnews()
  {
    if [[ -z "$1" ]]; then
      tmux new
    else
      tmux new -s "$1"
    fi
  }
  alias tls='tmux list-session'
  alias tlw='tmux list-window'
  alias tat='tmux attach -t'
  alias tkill='tmux kill-session -t'
  alias tswitch='tmux switch-client -t'
  function texec {
    # kill current client, switch to new client
    tmux switch-client -t "$1" && tmux kill-session
  }
fi

# if [[ "$(uname -s)" == "Darwin" ]]; then
#   open_cmd='open'
# fi

# }}}
# ===============================================================
# All-system aliases {{{
# ===============================================================

# Spelling corrections (typos)
alias wokr=work
alias sgit=git
alias gti=git
alias oepn=open
alias lls=ls
alias sl=ls
alias clera=clear
alias lau=lua

# Git aliases
alias gdn='git diff --name-only'
alias gh='git head'
alias glg='git log --pretty=commitdate --stat'
alias grc='git rc'
alias gs='git status -sb'

# More flexible version of OMZ's git_main_branch. Extend this with:
# GIT_MAIN_BRANCHES=(my-cool-branch "${GIT_MAIN_BRANCHES[@]}")
declare -a GIT_MAIN_BRANCHES=(
  main
  master
)
git_main_branch() {
  local _branch
  for _branch in "${GIT_MAIN_BRANCHES[@]}"; do
    if git show-ref --verify --quiet "refs/heads/${_branch}"; then
      echo "${_branch}"
      return
    fi
  done
  echo "${_branch}"
}

alias gcm='git checkout "$(git_main_branch)"'
alias gdm='git diff "$(git_main_branch)"'

# General aliases
alias ag='ag --smart-case'
alias v="$(sh -c 'which nvim || which vim || which vi')"
alias n="npm"
alias nt="npm test"
alias ni="npm install"
alias nr="npm run"

# Add an "alert" alias for long running commands.  Use like so:
# sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

alias venv='source venv/bin/activate'
alias potigol="java -jar $HOME/packages/potigal/potigol.jar"
alias epotigol="java -jar $HOME/packages/potigal/epotigol.jar"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'
  #alias dir='dir --color=auto'
  #alias vdir='vdir --color=auto'

  alias grep='grep --color=auto -d skip'
  alias igrep='grep -i'
  alias rgrep='grep -ir'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias lss='ls -Ad .*'

# }}}
# ===============================================================
# Load scripts folder for shell functions {{{
# ===============================================================

# Load up all my externally written functions
for k in $HOME/bin/scripts/*.sh; do
  . "$k"
done

# }}}
# ===============================================================
